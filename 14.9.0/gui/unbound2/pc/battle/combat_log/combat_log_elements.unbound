(def constant KEY_ENTER 13)
(def constant KEY_TAB 0x0F)





(def element CombatLogTextInput (_isChatAvailable:bool) layout=true
	(scope
		(event evKeyDown)
		(event evSendMessage)
		(event evClearInput)
		(event evFocusChangedWithDelay)

		
		(var battleChatAndLog:gfx = "$datahub.getSingleComponent(CC.battleChatAndLog)")
		(var isInputFocused:bool = "battleChatAndLog.isInputFocused" (event "battleChatAndLog.evIsInputFocusedChanged"))

		
		(var internalFocused:bool = "false" watch=false)

		
		(var keyCode:number = "$event.keyCode" init=false (event "evKeyDown"))
		(bind keyCode 0 (event "evClearInput"))

		(var textInput:str = '')
		(bind textInput '' watch=false init=false (event "evClearInput"))
		(var resultMessage:str = "(textInput && textInput != '' && textInput != ' ' && textInput != '\n') ? textInput : ''")

		(var delayedHitTest:bool = "false")
		
		(controller $Animation
			(bindcall play duration=0.3 to="{delayedHitTest:false}" action="kill" (bind enabled "!isInputFocused"))
			(bindcall play duration=0.01 to="{delayedHitTest:true}" action="kill" (bind enabled "isInputFocused"))
		)
	)
	(bindcall externalCall 'inputMapping.onAction' "['battleChat.outgoingMessage', { message: resultMessage }]" init=false watch=false (event "evSendMessage"))
	(bindcall externalCall 'inputMapping.onAction' "['battleChat.inputFocusChanged', { focused: internalFocused }]" init=false watch=false (event "evFocusChangedWithDelay"))

	(dispatch evSendMessage watch=false (bind enabled "keyCode == KEY_ENTER") (event "evKeyDown"))
	(dispatch evClearInput args="{}" (event "evSendMessage")) 
	(dispatch evClearInput args="{}" init=false (bind enabled "!internalFocused") (bind trigger "internalFocused")) 

	
	(dispatch evFocusChangedWithDelay args="{}" delay=0.01 init=false (bind trigger "internalFocused"))

	(style (width = 100%))
	
	(block
		(style
			(width = 100%)
		)
		(mc battle_chat_text_area_input
			(name = 'txa_input')

			(bind visible "_isChatAvailable")
			(bind enabled "_isChatAvailable")

			(bind maxChars 140)

			(style (width = 100%) (forceResize=true))

			(sync textInput "'text'" on='change')
			(bind text '' (event "evClearInput"))
			(controller $Focus tabEnabled=false
				(bind clickFocus "!internalFocused")
				(bind internalFocused "$event" init=false on='evFocused')
				(bindcall setFocus "isInputFocused" init=false watch=false (bind trigger "isInputFocused"))
			)
			(dispatch evKeyDown args="{ keyCode: $event ? $event.keyCode : 0 }" on='keyDown' init=false)
		)
	)
	(block
		(class $FullsizeAbsolute)
		(style
			(backgroundColor = 0x01000000)
			(bind hitTest "delayedHitTest")
		)
	)
)



(def constant COMBAT_CHAT_SETTINGS_TOOLTIP_OFFSET "[6, -40]"
	
)

(def element CombatChatSettingsButton () layout=true
	(scope
		(event evHideInfotip)
		(event evOnButtonClicked)

		(var mouse:gfx = "$datahub.getSingleComponent(CC.mouse)")
		(var isMouseActive:bool = "mouse.active" (event "mouse.evActiveChanged"))

		(var infotipVisible:bool = false)
	)
	(dispatch evHideInfotip args="{}" (bind trigger "isMouseActive"))

	(controller $Tooltip
		(bind enabled "!(infotipVisible)")
		(renderer='CombatChatSettingsTooltip')
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(align="bottom|right")
		(offset="[6, 20]")
	)

	(controller $Tooltip
		(renderer='CombatChatSettingsInfotip')
		(bindcall show animation={duration:0.1, easing:"Easing.cubic_in", from:{alpha:1}, to:{alpha:1}} (event "evOnButtonClicked"))
		(bindcall hide animation={duration:0.1, easing:"Easing.cubic_out", from:{alpha:1}, to:{alpha:0}} on='evClickOutside' (event "evHideInfotip"))
		(bind infotipVisible true init=false on='evShow')
		(bind infotipVisible false init=false on='evHide')
		(priority=1)
		(align="bottom|right")
		(position="border")
		(offset="COMBAT_CHAT_SETTINGS_TOOLTIP_OFFSET")
	)

	
	(element ButtonHamburgerSmall
		(style
			(position = "absolute") (right = -20px) (top = -18px)
		)
	)
)

(def constant BATTLE_CHAT_CHANNEL_ID_TO_SUMMARY_IDS "{
	SC.Channel.BATTLE_CHAT_CHANNEL_TYPE.GENERAL: 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_EVERYONE',
	SC.Channel.BATTLE_CHAT_CHANNEL_TYPE.TEAM: 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_TEAM',
	SC.Channel.BATTLE_CHAT_CHANNEL_TYPE.DIVISION: 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_DIVISION',
	SC.Channel.BATTLE_CHAT_CHANNEL_TYPE.SYSTEM: 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_NONE'
}")

(def constant BATTLE_CHAT_NAME_DISPLAY_TO_SUMMARY_IDS "{
	0: 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_BOTH',
	1: 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_NAME_ONLY',
	2: 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_SHIP_ONLY'
}")

(def element CombatChatSettingsTooltip () layout=true
	(scope
		(var preferencesEntity:gfx = "$datahub.getSingleComponent(CC.battleChatPreferences)")
		(var enabledChannels:number = "preferencesEntity.enabledChannels" (event "preferencesEntity.evChanged"))
		(var nameDisplay:number = "preferencesEntity.nameDisplay" (event "preferencesEntity.evChanged"))

		(var channelsText:str = "BATTLE_CHAT_CHANNEL_ID_TO_SUMMARY_IDS[enabledChannels]" (event "preferencesEntity.evChanged"))
		(var nameDisplayText:str = "BATTLE_CHAT_NAME_DISPLAY_TO_SUMMARY_IDS[nameDisplay]" (event "preferencesEntity.evChanged"))
	)

	(style (hitTest = false) (width = 300px))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText _headerText='IDS_BATTLE_CHAT_OPTIONS_HEADER_MAIN')
		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemInnerHeaderSubheaderText
			_headerText='IDS_BATTLE_CHAT_OPTIONS_HEADER_ENABLED_CHANNELS'
			_subheaderText="channelsText"
		)
		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemInnerHeaderSubheaderText
			_headerText='IDS_BATTLE_CHAT_OPTIONS_HEADER_NAME_DISPLAY'
			_subheaderText="nameDisplayText"
		)
		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemStatusLine
			_text='IDS_CHOOSE'
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
		)
	)
)

(def constant COMBAT_CHAT_INFOTIP_PIN "{pinTop: 0, pinBottom: 0, pinLeft: 7, pinRight: 0}")

(def element CombatChatSettingsInfotip () layout=true
	(scope
		(event evPinPositionChanged)	
										

		(var pinParams:dict = "COMBAT_CHAT_INFOTIP_PIN" watch=false)

		(var offsetTop:number = 0 watch=false)
		(bind offsetTop "$event.pinPosition == 'top' ? 8 : 0" init=false (event "evPinPositionChanged"))

		(var preferencesEntity:gfx = "$datahub.getSingleComponent(CC.battleChatPreferences)")
		(var enabledChannels:number = "preferencesEntity.enabledChannels" (event "preferencesEntity.evChanged"))
		(var nameDisplay:number = "preferencesEntity.nameDisplay" (event "preferencesEntity.evChanged"))
	)

	(style
		(bind marginTop "offsetTop")
	)

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(style (width = 300px))

		(element TooltipSystemHeaderSubheaderText
			_headerText="'IDS_BATTLE_CHAT_OPTIONS_HEADER_MAIN'"
			_unifiedStatus="SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
		)
		(element TooltipSystemHorizontalDivider)

		(element TooltipSystemInnerHeaderText _headerText='IDS_BATTLE_CHAT_OPTIONS_HEADER_ENABLED_CHANNELS' _unifiedStatus="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
		
		(element CombatChatOptionsRadioButton
			_itemKey = 'enabledChannels'
			_value = 0
			_currentValue = "enabledChannels"
			_label = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_EVERYONE'
			_tooltipHeader = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_HEADER'
			_tooltipDescription = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_EVERYONE'
		)
		(element CombatChatOptionsRadioButton
			_itemKey = 'enabledChannels'
			_value = 1
			_currentValue = "enabledChannels"
			_label = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TEAM'
			_tooltipHeader = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_HEADER'
			_tooltipDescription = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_TEAM'
		)
		(element CombatChatOptionsRadioButton
			_itemKey = 'enabledChannels'
			_value = 2
			_currentValue = "enabledChannels"
			_label = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_DIVISION'
			_tooltipHeader = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_HEADER'
			_tooltipDescription = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_DIVISION'
		)
		(element CombatChatOptionsRadioButton
			_itemKey = 'enabledChannels'
			_value = -1
			_currentValue = "enabledChannels"
			_label = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_NONE'
			_tooltipHeader = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_HEADER'
			_tooltipDescription = 'IDS_BATTLE_CHAT_OPTIONS_CHANNELS_TOOLTIP_NONE'
		)

		(element TooltipSystemHorizontalDivider)

		(element TooltipSystemInnerHeaderText _headerText='IDS_BATTLE_CHAT_OPTIONS_HEADER_NAME_DISPLAY' _unifiedStatus="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")

		(element CombatChatOptionsRadioButton
			_itemKey = 'nameDisplay'
			_value = 0
			_currentValue = "nameDisplay"
			_label = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_BOTH'
			_tooltipHeader = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_HEADER'
			_tooltipDescription = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_BOTH'
		)
		(element CombatChatOptionsRadioButton
			_itemKey = 'nameDisplay'
			_value = 1
			_currentValue = "nameDisplay"
			_label = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_NAME_ONLY'
			_tooltipHeader = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_HEADER'
			_tooltipDescription = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_NAME_ONLY'
		)
		(element CombatChatOptionsRadioButton
			_itemKey = 'nameDisplay'
			_value = 2
			_currentValue = "nameDisplay"
			_label = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_SHIP_ONLY'
			_tooltipHeader = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_HEADER'
			_tooltipDescription = 'IDS_BATTLE_CHAT_OPTIONS_NAME_DISPLAY_TOOLTIP_SHIP_ONLY'
		)

	)
	(element InfotipPins "COMBAT_CHAT_INFOTIP_PIN" "!isHighContrast")
)

(def element CombatChatOptionsRadioButton (
	_itemKey:str, _currentValue:number, _value:number,
	_label:str, _tooltipHeader:str, _tooltipDescription:str,
	_enabled:bool=true) layout=true

	(scope
		(var isSelected:bool = "_value == _currentValue")
		(macro MOUSE_HANDLER_SCOPE)
		(var clickMethods:array = "[ { type: 'direct.action', name: 'option.set', args: [ 'ui.battleChat.' + _itemKey, _value ] } ]")
	)

	(style
		(flow = "horizontal")
		(width = "OPTION_COLUMN_WIDTH")
		(align = "middle")
		(bind marginTop "SXS")
	)

	(element RadioButton
		_selected = "isSelected"
		_enabled = "_enabled"
		_rollOver = "rollOver"
		_interactive = "_enabled"
		_size = 14px
	)

	(tf
		(class $TextDefaultNM)
		(bind alpha "_enabled ? (rollOver && !(mouseDown) ? TA : TC) : TEXT_PREVIEW_ALPHA")
		(style
			(width = 100%)
			(marginLeft = "S")
			(marginTop = -3px)
		)
		(text = "_label")
	)

	(controller $Tooltip
		(renderer='HeaderDescriptionInstructionTooltip')
		(args
			_headerText = "_tooltipHeader"
			_descriptionText = "_tooltipDescription"
			_mouseInstructionText = "isSelected ? '' : 'IDS_CHOOSE'"
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(offset = {	x: 5, y: 25 })
		(screenBoundsOffset = 10)
	)

	(macro MOUSE_HANDLER
		_enabled = "_enabled"
		_methods = "clickMethods"
		_soundSet = "'default_checkbox'"
	)
)




(def element VoiceChatOutgoingIcon () layout=true
	(scope
		(var selfAvatarWatcher:gfx = "$datahub.getFirstWatcher(CC.playerAvatar)")
		(var selfAvatarEntity:gfx = "selfAvatarWatcher.entity" (event "selfAvatarWatcher.event"))
		(var pureName:str = "selfAvatarEntity ? selfAvatarEntity.avatar.pureName : null")

		(var playerVoiceChatWatcher:gfx = "$datahub.getPrimWatcher(CC.playerVoiceState, pureName)")
		(var playerVoiceChatEntity:gfx = "playerVoiceChatWatcher.entity" (event "playerVoiceChatWatcher.event"))
		(var isSpeaking:bool = "playerVoiceChatEntity ? playerVoiceChatEntity.playerVoiceState.isSpeaking : false" (event "playerVoiceChatEntity.playerVoiceState.evIsSpeakingChanged"))

		(var voiceChat:gfx = "$datahub.getSingleComponent(CC.voiceChat)")
		(var outgoing:bool = "voiceChat.outgoing" (event "voiceChat.evOutgoingChanged"))
	)
	(style (hitTest = false))

	(macro CHANGE_ALPHA_BY_TRIGGER_ANIM _duration="0.1" _fromAlpha=0 _toAlpha=1 _triggerExpression="outgoing")

	(controller $Tooltip
		(bind enabled "outgoing")
		(renderer = 'SimpleStatusTooltip')
		(args
			_unifiedStatus="SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
			_text="'IDS_VOICE_CHAT_OUTGOING_STATE_HINT'"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
	
	(block
		(style
			(backgroundImage = 'url:../battle_hud/combat_log/icon_voice_chat.png')
			(backgroundSize = "autosize")
		)
		(macro CHANGE_ALPHA_BY_TRIGGER_ANIM _duration="0.1" _fromAlpha=0.6 _toAlpha=1 _triggerExpression="isSpeaking")
	)
)

