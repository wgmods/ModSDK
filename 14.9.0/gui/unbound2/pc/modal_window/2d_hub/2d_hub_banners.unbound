(def constant HUB2D_PROMO_BANNER_WIDTH_3 256)
(def constant HUB2D_PROMO_BANNER_WIDTH_2 388)
(def constant HUB2D_PROMO_BANNER_WIDTH_1 784)
(def constant HUB2D_PROMO_BANNER_HEIGHT 625)

(def constant HUB2D_SIDE_BANNER_WIDTH_BIG 440)
(def constant HUB2D_SIDE_BANNER_SIZE_0 271)
(def constant HUB2D_SIDE_BANNER_SIZE_1 237)
(def constant HUB2D_SIDE_BANNER_SIZE 216)

(def constant HUB2D_NEWS_BANNER_WIDTH_BIG 440)
(def constant HUB2D_NEWS_BANNER_WIDTH 216)
(def constant HUB2D_NEWS_BANNER_HEIGHT 35)

(def constant HUB2D_BACKGROUNDCOLOR_ACTIVE 0x21E8E8E8)
(def constant HUB2D_BACKGROUNDCOLOR_INACTIVE 0x0DE8E8E8)
(def constant HUB2D_BACKGROUNDCOLOR_ROLLOVER 0x34DBDBDB)

(def constant HUB2D_ALL_NEWS_WIDTH 440)
(def constant HUB2D_ALL_NEWS_HEIGHT 46)
(def constant HUB_2D_BANNER_TYPE {
	0:	'Abstract',
	1:	'GrandVoyage',
	2:	'WowsClassic',
	3:	'AnniversaryReward',
	4:	'Snowflakes',
	5:	'PlayerReport',
	6:	'AsymmetricBattle',
	7:	'Recruitment',
	8:	'GermanShips',
	9:	'NavalBase',
	10:	'Kots',
})

(def constant HUB2D_BANNER_STATISTICS
	{
		ABSTRACT_PROMO:		'ub2:hub2d_abstract_promo_clicked_',
		GRAND_VOYAGE:		'ub2:hub2d_grand_voyage_clicked',
		WOWS_CLASSIC:		'ub2:hub2d_wows_classic_clicked',
		ANNIVERSARY_REWARD:	'ub2:hub2d_anniversary_reward_clicked',
		ABSTRACT_SIDE:		'ub2:hub2d_abstract_side_clicked_',
		SNOWFLAKES:			'ub2:hub2d_snowflakes_clicked',
		PLAYER_REPORT:		'ub2:hub2d_player_report_clicked',
		ASYMMETRIC:			'ub2:hub2d_asymmetric_clicked',
		GERMAN_SHIPS:		'ub2:hub2d_german_ships_clicked',
		RECRUITMENT:		'ub2:hub2d_recruitment_clicked',
		ALL_NEWS:			'ub2:hub2d_all_news_clicked',
		NAVAL_BASE:			'ub2:hub2d_naval_base_clicked',
		KOTS:				'ub2:hub2d_kots_clicked'
	}
)



(def element Hub2DPromotedBanner(_index:number, _numberOfPromotedBanners:number) layout=true
	(scope
		(var bannerCollection:gfx = "$datahub.getCollection(CC.hub2DBanner)" )
		(var promotedBannerCollection:gfx = "bannerCollection ? bannerCollection.getChildByPath('bySide.'+SC.Hub_2d.BANNER_SIDE.PROMOTED) : null"
			(event "bannerCollection.evAdded")
			(event "bannerCollection.evRemoved")
			(event "promotedBannerCollection.evUpdated")
		)
		(var typeOfBanner:number = "promotedBannerCollection ? promotedBannerCollection.items[_index].hub2DBanner.type : null")
		(var idOfBanner:str = "promotedBannerCollection ? promotedBannerCollection.items[_index].hub2DBanner.id : null")
		(var markerNewForBanner:str = "promotedBannerCollection && promotedBannerCollection.items[_index].hub2DBanner.data ? promotedBannerCollection.items[_index].hub2DBanner.data.marker_new : null")

		
		(var accountLevelEntity:gfx = "$datahub.getSingleEntity(CC.accountLevel)")
		(var accountLevelComponent:gfx = "accountLevelEntity ? accountLevelEntity.accountLevel : null" (event "accountLevelEntity.accountLevel.evLevelChanged"))
		(var accountLevel:number = "accountLevelComponent ? accountLevelComponent.level : 0" (event "accountLevelComponent.evLevelChanged"))

		
		(var bannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, idOfBanner)")
		(var isNew:bool = "bannerEntity ? bannerEntity.hasComponent(CC.newItem) : false"	(event "bannerEntity.evAdded")
		 																					(event "bannerEntity.evRemoved"))
		(var showMarkerNew:bool = "markerNewForBanner && isNew")

		(var childRenderer:str = "HUB_2D_BANNER_TYPE[typeOfBanner]")
		(var bannerWidth:number =	"_numberOfPromotedBanners == 1	? HUB2D_PROMO_BANNER_WIDTH_1 :
									 _numberOfPromotedBanners == 2	? HUB2D_PROMO_BANNER_WIDTH_2
																	: HUB2D_PROMO_BANNER_WIDTH_3")
	)
	(bindcall externalCall "isNew ? 'inputMapping.onAction' : ''"	"['makeSeen', {entityId: bannerEntity.id}]" init=false watch=false on=click)

	(style
		(height = "HUB2D_PROMO_BANNER_HEIGHT") 
		(bind width "bannerWidth")
		(bind marginRight "_index == _numberOfPromotedBanners - 1 ? 0 : HUB2D_BANNER_OFFSET")
	)

	(controller $Instance
		(bind renderer "childRenderer + 'Hub2DPromotedBanner'")
		(args
			_idOfBanner = "idOfBanner"
			_featureName = "typeOfBanner"
			_accountLevel = "accountLevel"
			_showMarkerNew = "showMarkerNew"
		)
	)
)

(def element AbstractHub2DPromotedBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(var abstractBannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, _idOfBanner)")
		(var abstractBanner:gfx = "abstractBannerEntity ? abstractBannerEntity.hub2DBanner : null")

		(var abstractBannerTitle:str = "abstractBanner ? abstractBanner.data.title_ids : ''"					(event "abstractBanner.evChanged"))
		(var abstractBannerDescription:str = "abstractBanner ? abstractBanner.data.description_ids : ''"		(event "abstractBanner.evChanged"))
		(var abstractBannerIconUrl:str = "abstractBanner ? abstractBanner.data.icon_url : ''"					(event "abstractBanner.evChanged"))
		(var abstractBannerMouseInstruction:str = "abstractBanner ? abstractBanner.data.mouse_instruction_ids : ''"	(event "abstractBanner.evChanged"))

		(var abstractBannerBattleType:str = "abstractBanner ? abstractBanner.data.battle_type : ''"								(event "abstractBanner.evChanged"))
		(var abstractBannerBattleTypeGameParamId:str = "abstractBanner ? abstractBanner.data.battle_type_game_param_name : ''"	(event "abstractBanner.evChanged"))
		(var battleTypeGameParamId:number = "toNumber(!!abstractBannerBattleTypeGameParamId)")

		(var abstractBannerNavigateRoute:str = "abstractBanner ? abstractBanner.uiEvents[0] : ''"		(event "abstractBanner.evChanged"))
		(var abstractBannerNavigateUrl:str = "abstractBanner && abstractBannerNavigateRoute == SC.Ui_windows.ROUTE.PORTAL ? abstractBanner.data.route_url : ''"		(event "abstractBanner.evChanged"))
		(var statsEventName:str = "HUB2D_BANNER_STATISTICS.ABSTRACT_PROMO + _featureName + '_' + _idOfBanner")
	)
	(bindcall externalCall "abstractBannerNavigateRoute ? 'inputMapping.onAction' : ''" "['navigateTo',	{route: abstractBannerNavigateRoute,
																										 data: {url: abstractBannerNavigateUrl}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [statsEventName]]" init=false watch=false on=click)
	

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DPromotedBannerContent'
		(args
			_title = "abstractBannerTitle"
			_descriptionText = "abstractBannerDescription"
			_iconUrl = "abstractBannerIconUrl"
			_isNew = "_showMarkerNew"
		)
	)

	(controller $Tooltip
		(bind renderer "'Hub2DStandardTooltip'")
		(args
			_headerText = "abstractBannerTitle"
			_mouseInstructionText = "abstractBannerMouseInstruction"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element GrandVoyageHub2DPromotedBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var isActive:bool = "_accountLevel >= SC.Hub_2d.BANNER_ACTIVE_LEVEL.GRAND_VOYAGE")
	)
	(bindcall externalCall "isActive ? 'inputMapping.onAction' : ''" "['navigateTo',	{route: SC.Ui_windows.ROUTE.PORTAL,
																		 data: {url: SC.Ui_windows.GUI_URL.GRAND_VOYAGE}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.GRAND_VOYAGE]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DPromotedBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_isActive = "isActive"
			_level="SC.Hub_2d.BANNER_ACTIVE_LEVEL.GRAND_VOYAGE"
			_isNew = "_showMarkerNew"
		)
	)

	(controller $Tooltip
		(bind renderer "'Hub2DStandardTooltip'")
		(args
			_headerText = "'IDS_2D_HUB_GRAND_VOYAGE_BANNER_TITLE'"
			_isActive = "isActive"
			_level = "SC.Hub_2d.BANNER_ACTIVE_LEVEL.GRAND_VOYAGE"
			_mouseInstructionText = "'IDS_2D_HUB_GRAND_VOYAGE_MOUSE_INSTRUCTION'"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element WowsClassicHub2DPromotedBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		
		(var wowsClassicBannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, _idOfBanner)")
		(var wowsClassicBanner:gfx = "wowsClassicBannerEntity ? wowsClassicBannerEntity.hub2DBanner : null")

		(macro SERVER_TIME_SCOPE)
		(var wowsClassicBannerStartTime:number = "wowsClassicBanner ? wowsClassicBanner.startTime : ''" (event "wowsClassicBanner.evChanged"))
		(var timeLeftToStart:number = "wowsClassicBannerStartTime - serverTime")
		(macro COUNTDOWN_SCOPE "'formattedTimeLeftToStart'" "wowsClassicBannerStartTime" "'HIGHESTDAYS'")

		(var wowsClassicBattleCollection:gfx = "$datahub.getCollection(CC.battleType).getChildByPath('common.wowsClassicBattles')")
		(var wowsClassicBattleEntity:gfx = "wowsClassicBattleCollection.items.length ? wowsClassicBattleCollection.items[0] : null" 
																	(event "wowsClassicBattleCollection.evAdded") 
																	(event "wowsClassicBattleCollection.evRemoved")) 
		(var hasBattleEntity:bool = "wowsClassicBattleEntity != null")

		(var eventBattleStateComponent:gfx = "wowsClassicBattleEntity ? wowsClassicBattleEntity.eventBattleState : null" 
															watch=false (event "wowsClassicBattleCollection.evAdded") 
																		(event "wowsClassicBattleCollection.evRemoved"))
		(var hasBattleStateComponent:bool = "eventBattleStateComponent != null")
		(var eventBattleEntityId:number = "eventBattleStateComponent ? wowsClassicBattleEntity.id : 0" 
															watch=false (event "wowsClassicBattleCollection.evAdded") 
																		(event "wowsClassicBattleCollection.evRemoved")) 
		(var eventBattleName:str = "eventBattleStateComponent ? eventBattleStateComponent.name : ''")
		(var eventBattleEventId:number = "eventBattleStateComponent ? eventBattleStateComponent.eventId : null")

		(var isActive:bool = "_accountLevel >= SC.Hub_2d.BANNER_ACTIVE_LEVEL.EVENT_BATTLE && timeLeftToStart <= 0")
		(var title:str = "wowsClassicBattleEntity && eventBattleName ? 'IDS_' + eventBattleName : ''")
		(var descriptionText:str = "wowsClassicBattleEntity && eventBattleName ? 'IDS_' + eventBattleName + '_DESCRIPTION' : ''")
		(var isEventTooltipEnabled:bool = "hasBattleEntity && hasBattleStateComponent") 
	)
	(bindcall externalCall "isActive && wowsClassicBattleEntity ? 'inputMapping.onRequest' : ''" "['open2DHubSelectBattleType', {_battleTypeEntityId: eventBattleEntityId, _isWowsClassicBattle: true}]"	init=false watch=false on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.WOWS_CLASSIC]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DPromotedBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_isActive = "isActive"
			_level="SC.Hub_2d.BANNER_ACTIVE_LEVEL.EVENT_BATTLE"
			_title = "title"
			_descriptionText = "descriptionText"
			_isNew = "_showMarkerNew"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
		)
	)

	(controller $Tooltip
		(bind enabled "isEventTooltipEnabled")
		(bind renderer "'EventBattleTypeTooltip'")
		(args
			_battleTypeEntityId = "eventBattleEntityId"
			_isFromHub2D = "!isActive"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)

	(controller $Tooltip
		(bind enabled "!isEventTooltipEnabled")
		(bind renderer "'Hub2DStandardTooltip'")
		(args
			_headerText = "'IDS_2D_HUB_WOWS_CLASSIC_BANNER_TITLE'"
			_isActive = "isActive"
			_level = "SC.Hub_2d.BANNER_ACTIVE_LEVEL.EVENT_BATTLE"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element AnniversaryRewardHub2DPromotedBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)
	)
	(bindcall externalCall "'inputMapping.onAction'" "['navigateTo',	{route: SC.Ui_windows.ROUTE.PORTAL,
																		 data: {url: SC.Ui_windows.GUI_URL.ANNIVERSARY_REWARD}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.ANNIVERSARY_REWARD]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DPromotedBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_isNew = "_showMarkerNew"
		)
	)

	(controller $Tooltip
		(bind renderer "'HeaderDescriptionInstructionTooltip'")
		(args
			_headerText = "'IDS_2D_HUB_ANNIVERSARY_REWARD_BANNER_TITLE'"
			_mouseInstructionText = "'IDS_2D_HUB_ANNIVERSARY_REWARD_MOUSE_INSTRUCTION'"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)



(def element Hub2DSideBanner(_index:number, _numberOfSideBanners:number, _numberOfNewsBanners:number) layout=true
	(scope
		(var bannerCollection:gfx = "$datahub.getCollection(CC.hub2DBanner)" )
		(var sideBannerCollection:gfx = "bannerCollection ? bannerCollection.getChildByPath('bySide.'+SC.Hub_2d.BANNER_SIDE.SIDE) : null"
			(event "bannerCollection.evAdded")
			(event "bannerCollection.evRemoved")
			(event "sideBannerCollection.evUpdated")
		)
		(var typeOfBanner:number = "sideBannerCollection ? sideBannerCollection.items[_index].hub2DBanner.type : null")
		(var idOfBanner:str = "sideBannerCollection ? sideBannerCollection.items[_index].hub2DBanner.id : null")
		(var markerNewForBanner:str = "sideBannerCollection && sideBannerCollection.items[_index].hub2DBanner.data ? sideBannerCollection.items[_index].hub2DBanner.data.marker_new : null")

		(var childRenderer:str = "HUB_2D_BANNER_TYPE[typeOfBanner]")
		(var isWide:bool = "(_numberOfSideBanners == 3 && _index == 0) || _numberOfSideBanners == 2")
		(var isLastBanner:bool = "_index == _numberOfSideBanners - 1")

		
		(var accountLevelEntity:gfx = "$datahub.getSingleEntity(CC.accountLevel)")
		(var accountLevelComponent:gfx = "accountLevelEntity ? accountLevelEntity.accountLevel : null" (event "accountLevelEntity.accountLevel.evLevelChanged"))
		(var accountLevel:number = "accountLevelComponent ? accountLevelComponent.level : 0" (event "accountLevelComponent.evLevelChanged"))

		
		(var bannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, idOfBanner)")
		(var isNew:bool = "bannerEntity ? bannerEntity.hasComponent(CC.newItem) : false"	(event "bannerEntity.evAdded")
		 																					(event "bannerEntity.evRemoved"))
		(var showMarkerNew:bool = "markerNewForBanner && isNew")
	)
	(bindcall externalCall "isNew ? 'inputMapping.onAction' : ''"	"['makeSeen', {entityId: bannerEntity.id}]" init=false watch=false on=click)

	(style
		(bind height "	!_numberOfNewsBanners		?	HUB2D_SIDE_BANNER_SIZE_0 :
						_numberOfNewsBanners == 1	?	HUB2D_SIDE_BANNER_SIZE_1
													:	HUB2D_SIDE_BANNER_SIZE")
		(bind width "isWide ? HUB2D_SIDE_BANNER_WIDTH_BIG : HUB2D_SIDE_BANNER_SIZE")
		(bind marginRight "isLastBanner || isWide ? 0 : HUB2D_BANNER_OFFSET")
		(bind marginBottom "isLastBanner ? 0 : HUB2D_BANNER_OFFSET")
	)

	(controller $Instance
		(bind renderer "childRenderer + 'Hub2DSideBanner'")
		(args
			_idOfBanner = "idOfBanner"
			_featureName = "typeOfBanner"
			_accountLevel = "accountLevel"
			_showMarkerNew = "showMarkerNew"
		)
	)
)

(def element AbstractHub2DSideBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(var abstractBannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, _idOfBanner)")
		(var abstractBanner:gfx = "abstractBannerEntity ? abstractBannerEntity.hub2DBanner : null")

		(var abstractBannerTitle:str = "abstractBanner ? abstractBanner.data.title_ids : ''"					(event "abstractBanner.evChanged"))
		(var abstractBannerIconUrl:str = "abstractBanner ? abstractBanner.data.icon_url : ''"					(event "abstractBanner.evChanged"))
		(var abstractBannerMouseInstruction:str = "abstractBanner ? abstractBanner.data.mouse_instruction_ids : ''"	(event "abstractBanner.evChanged"))

		(var abstractBannerNavigateRoute:str = "abstractBanner ? abstractBanner.uiEvents[0] : ''"																	(event "abstractBanner.evChanged"))
		(var abstractBannerNavigateUrl:str = "abstractBanner && abstractBannerNavigateRoute == SC.Ui_windows.ROUTE.PORTAL ? abstractBanner.data.route_url : ''"		(event "abstractBanner.evChanged"))
		(var statsEventName:str = "HUB2D_BANNER_STATISTICS.ABSTRACT_SIDE + _featureName + '_' + _idOfBanner")
	)
	(bindcall externalCall "abstractBannerNavigateRoute ? 'inputMapping.onAction' : ''" "['navigateTo',	{route: abstractBannerNavigateRoute,
																										 data: {url: abstractBannerNavigateUrl}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [statsEventName]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DSideBannerContent'
		(args
			_title = "abstractBannerTitle"
			_iconUrl = "abstractBannerIconUrl"
			_isNew = "_showMarkerNew"
		)
	)

	(controller $Tooltip
		(bind renderer "'Hub2DStandardTooltip'")
		(args
			_headerText = "abstractBannerTitle"
			_mouseInstructionText = "abstractBannerMouseInstruction"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element SnowflakesHub2DSideBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var bonustagSeasonEntity:gfx = "$datahub.getCollection(CC.bonusTagSeason).getChildByPath('snowflakeSeasonCollection').items[0]")
		(var bonusTagSeason:gfx = "bonustagSeasonEntity ? bonustagSeasonEntity.bonusTagSeason : null" (event "bonustagSeasonEntity.bonusTagSeason.evChanged"))
		(var bonusSnowflakesCount:number = "bonusTagSeason ? bonusTagSeason.bonusSnowflakes : 0" (event "bonusTagSeason.evChanged"))
		(var bonusSnowflakeProgress:number = "bonusTagSeason ? bonusTagSeason.bonusSnowflakeProgress : 0" (event "bonusTagSeason.evChanged"))
		(var bonusSnowflakeThreshold:number = "bonusTagSeason ? bonusTagSeason.bonusSnowflakeThreshold : 0" (event "bonusTagSeason.evChanged"))

		(var bonusSnowflakeBarProgress:number = "bonusSnowflakeThreshold ? bonusSnowflakeProgress / bonusSnowflakeThreshold : 0")
		(var expToNextSnowflake:number = "bonusSnowflakeThreshold - bonusSnowflakeProgress")
	)
	(bindcall externalCall "'inputMapping.onRequest'" "['showSnowflakesModal', {}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.SNOWFLAKES]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DSideBannerContent'
		(args
			_featureName="SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_amountAvailable = "bonusSnowflakesCount"
			_amountText = 'IDS_2D_HUB_SNOWFLAKES_BANNER_AMOUNT_TEXT'
			_progress = "bonusSnowflakeBarProgress"
			_progressBarText = 'IDS_2D_HUB_SNOWFLAKES_BANNER_PROGRESS_BAR_TEXT'
			_amountNeeded = "expToNextSnowflake"
			_title = 'IDS_2D_HUB_SNOWFLAKES_BANNER_TITLE'
		)
	)

	(controller $Tooltip
		(bind renderer "'SnowflakesBannerTooltip'")
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element PlayerReportHub2DSideBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)
	)
	(bindcall externalCall "'inputMapping.onAction'" "['navigateTo',	{route: SC.Ui_windows.ROUTE.PORTAL,
																		 data: {url: SC.Ui_windows.GUI_URL.PLAYER_REPORT}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.PLAYER_REPORT]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DSideBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_isNew = "_showMarkerNew"
		)
	)

	(controller $Tooltip
		(bind renderer "'HeaderDescriptionInstructionTooltip'")
		(args
			_headerText = "'IDS_2D_HUB_PLAYER_REPORT_BANNER_TITLE'"
			_descriptionText = "'IDS_2D_HUB_PLAYER_REPORT_BANNER_DESCRIPTION'"
			_mouseInstructionText = "'IDS_2D_HUB_PLAYER_REPORT_MOUSE_INSTRUCTION'"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element AsymmetricBattleHub2DSideBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var asymBattleBannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, _idOfBanner)")
		(var asymBattleBanner:gfx = "asymBattleBannerEntity ? asymBattleBannerEntity.hub2DBanner : null")
		(var asymBattleBannerBattleTypeGameParamId:str = "asymBattleBanner ? asymBattleBanner.data.battle_type_game_param_name : ''" (event "asymBattleBanner.evChanged"))

		(macro SERVER_TIME_SCOPE)
		(var assymBattleBannerStartTime:number = "asymBattleBanner ? asymBattleBanner.startTime : ''" (event "asymBattleBanner.evChanged"))
		(var timeLeftToStart:number = "assymBattleBannerStartTime - serverTime")
		(macro COUNTDOWN_SCOPE "'formattedTimeLeftToStart'" "assymBattleBannerStartTime" "'HIGHESTDAYS'")

		(var isActive:bool = "_accountLevel >= SC.Hub_2d.BANNER_ACTIVE_LEVEL.EVENT_BATTLE && timeLeftToStart <= 0")

		(var eventBattleTypeEntity:gfx = "asymBattleBannerBattleTypeGameParamId ? $datahub.getPrimaryEntity(CC.battleType, SC.Common.BATTLE_TYPES.EVENT_BATTLE + '_' + asymBattleBannerBattleTypeGameParamId) : null")
		(var eventBattleStateComponent:gfx = "eventBattleTypeEntity ? eventBattleTypeEntity.eventBattleState : null" (event "eventBattleTypeEntity.eventBattleState.evChanged"))
		(var eventBattleEntityId:number = "eventBattleStateComponent ? eventBattleStateComponent._entity_id : null" (event "eventBattleStateComponent.evChanged"))
		(var eventBattleName:str = "eventBattleStateComponent ? eventBattleStateComponent.name : ''" (event "eventBattleStateComponent.evChanged"))
		(var eventBattleEventId:number = "eventBattleStateComponent ? eventBattleStateComponent.eventId : null" (event "eventBattleStateComponent.evChanged"))
	)
	(bindcall externalCall "isActive && eventBattleTypeEntity ? 'inputMapping.onRequest' : ''" "['open2DHubSelectBattleType', {_battleTypeEntityId: eventBattleEntityId}]"	init=false watch=false on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.ASYMMETRIC]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DSideBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_isActive = "isActive"
			_level="SC.Hub_2d.BANNER_ACTIVE_LEVEL.EVENT_BATTLE"
			_title = "'IDS_' + eventBattleName"
			_descriptionText = "eventBattleName ? 'IDS_' + eventBattleName + '_DESCRIPTION' : ''"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
		)
	)

	(controller $Tooltip
		(bind renderer "'EventBattleTypeTooltip'")
		(args
			_battleTypeEntityId = "eventBattleEntityId"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
			_isFromHub2D = "!isActive"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element KotsHub2DSideBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		
		(var kotsBannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, _idOfBanner)")
		(var kotsBanner:gfx = "kotsBannerEntity ? kotsBannerEntity.hub2DBanner : null")

		(macro SERVER_TIME_SCOPE)
		(var kotsBannerStartTime:number = "kotsBanner ? kotsBanner.startTime : ''" (event "kotsBanner.evChanged"))
		(var timeLeftToStart:number = "kotsBannerStartTime - serverTime")
		(macro COUNTDOWN_SCOPE "'formattedTimeLeftToStart'" "kotsBannerStartTime" "'HIGHESTDAYS'")

		(var isActive:bool = "timeLeftToStart <= 0")
	)
	(bindcall externalCall "isActive ? 'inputMapping.onAction' : ''" "['gotoUrlByIdent', {ident: SC.Ui_windows.GUI_URL.KOTS}]" init=false watch=false on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.KOTS]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DSideBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_isActive = "isActive"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
			_isNew = "_showMarkerNew"
		)
	)

	(controller $Tooltip
		(bind renderer "'Hub2DStandardTooltip'")
		(args
			_headerText = "'IDS_2D_HUB_KOTS_BANNER_TITLE'"
			_descriptionText = "'IDS_2D_HUB_KOTS_BANNER_DESCRIPTION'"
			_mouseInstructionText = "'IDS_2D_HUB_KOTS_MOUSE_INSTRUCTION'"
			_isActive = "isActive"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element NavalBaseHub2DSideBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var navalBaseBannerEntity:gfx = "$datahub.getSingleEntity(CC.navalBaseBanner)")
		(var hasReward:bool = "navalBaseBannerEntity ? navalBaseBannerEntity.navalBaseBanner.hasReward : false" (event "navalBaseBannerEntity.navalBaseBanner.evChanged"))

		
		(var navalBaseHub2DBannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, _idOfBanner)")
		(var navalBaseHub2DBanner:gfx = "navalBaseHub2DBannerEntity ? navalBaseHub2DBannerEntity.hub2DBanner : null")

		(macro SERVER_TIME_SCOPE)
		(var navalBaseStartTime:number = "navalBaseHub2DBanner ? navalBaseHub2DBanner.startTime : ''" (event "navalBaseHub2DBanner.evChanged"))
		(var timeLeftToStart:number = "navalBaseStartTime - serverTime")
		(macro COUNTDOWN_SCOPE "'formattedTimeLeftToStart'" "navalBaseStartTime" "'HIGHESTDAYS'")

		(var isActive:bool = "_accountLevel >= SC.Hub_2d.BANNER_ACTIVE_LEVEL.NAVAL_BASE && timeLeftToStart <= 0")
	)
	(bindcall externalCall "isActive ? 'inputMapping.onAction' : ''" "['openNavalBase',	{from: '2d_hub_side_banner'}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.NAVAL_BASE]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DSideBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_isActive = "isActive"
			_level="SC.Hub_2d.BANNER_ACTIVE_LEVEL.NAVAL_BASE"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
			_isReward="hasReward"
			_isNew = "_showMarkerNew"
		)
	)

	(controller $Tooltip
		(bind renderer "'Hub2DStandardTooltip'")
		(args
			_headerText = "'IDS_2D_HUB_NAVAL_BASE_BANNER_TITLE'"
			_descriptionText = "'IDS_2D_HUB_NAVAL_BASE_BANNER_DESCRIPTION'"
			_mouseInstructionText = "'IDS_2D_HUB_NAVAL_BASE_MOUSE_INSTRUCTION'"
			_isActive = "isActive"
			_isReward="hasReward"
			_level="SC.Hub_2d.BANNER_ACTIVE_LEVEL.NAVAL_BASE"
			_timeLeftToStart = "timeLeftToStart"
			_formattedTimeLeftToStart = "formattedTimeLeftToStart"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)



(def element Hub2DNewsBanner(_index:number, _numberOfNewsBanners:number) layout=true
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var bannerCollection:gfx = "$datahub.getCollection(CC.hub2DBanner)" )
		(var newsBannerCollection:gfx = "bannerCollection ? bannerCollection.getChildByPath('bySide.'+SC.Hub_2d.BANNER_SIDE.NEWS) : null"
			(event "bannerCollection.evAdded")
			(event "bannerCollection.evRemoved")
			(event "bannerCollection.evUpdated")
		)
		(var typeOfBanner:number = "newsBannerCollection ? newsBannerCollection.items[_index].hub2DBanner.type : null")
		(var idOfBanner:str = "newsBannerCollection ? newsBannerCollection.items[_index].hub2DBanner.id : null")
		(var markerNewForBanner:str = "newsBannerCollection && newsBannerCollection.items[_index].hub2DBanner.data ? newsBannerCollection.items[_index].hub2DBanner.data.marker_new : null")

		(var childRenderer:str = "HUB_2D_BANNER_TYPE[typeOfBanner]")
		(var isWide:bool = "(_numberOfNewsBanners == 3 && _index == 0) || _numberOfNewsBanners < 3")

		
		(var accountLevelEntity:gfx = "$datahub.getSingleEntity(CC.accountLevel)")
		(var accountLevelComponent:gfx = "accountLevelEntity ? accountLevelEntity.accountLevel : null" (event "accountLevelEntity.accountLevel.evLevelChanged"))
		(var accountLevel:number = "accountLevelComponent ? accountLevelComponent.level : 0" (event "accountLevelComponent.evLevelChanged"))

		
		(var bannerEntity:gfx = "$datahub.getPrimaryEntity(CC.hub2DBanner, idOfBanner)")
		(var isNew:bool = "bannerEntity ? bannerEntity.hasComponent(CC.newItem) : false"	(event "bannerEntity.evAdded")
		 																					(event "bannerEntity.evRemoved"))
		(var showMarkerNew:bool = "markerNewForBanner && isNew")
	)
	(bindcall externalCall "isNew ? 'inputMapping.onAction' : ''"	"['makeSeen', {entityId: bannerEntity.id}]" init=false watch=false on=click)

	(style
		(bind height "HUB2D_NEWS_BANNER_HEIGHT")
		(bind width "isWide ? HUB2D_NEWS_BANNER_WIDTH_BIG : HUB2D_NEWS_BANNER_WIDTH")
		(bind marginRight "_index % 2 != 0 && _numberOfNewsBanners != 3 || isWide ? 0 : HUB2D_BANNER_OFFSET")
		(marginBottom="HUB2D_BANNER_OFFSET")
	)

	(controller $Instance
		(bind renderer "childRenderer + 'Hub2DNewsBanner'")
		(args
			_idOfBanner = "idOfBanner"
			_featureName = "typeOfBanner"
			_accountLevel = "accountLevel"
			_showMarkerNew = "showMarkerNew"
		)
	)
)

(def element GermanShipsHub2DNewsBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)
	)
	(bindcall externalCall "'inputMapping.onAction'" "['navigateTo',	{route: SC.Ui_windows.ROUTE.PORTAL,
																		 data: {url: SC.Ui_windows.GUI_URL.GERMAN_SHIPS}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.GERMAN_SHIPS]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DNewsBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_title = 'IDS_2D_HUB_GERMAN_SHIPS_BANNER_TITLE'
		)
	)

	(controller $Tooltip
		(bind renderer "'HeaderDescriptionInstructionTooltip'")
		(args
			_headerText = "'IDS_2D_HUB_GERMAN_SHIPS_BANNER_TITLE'"
			_descriptionText = "'IDS_2D_HUB_GERMAN_SHIPS_BANNER_DESCRIPTION'"
			_mouseInstructionText = "'IDS_2D_HUB_GERMAN_SHIPS_MOUSE_INSTRUCTION'"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element RecruitmentHub2DNewsBanner(_idOfBanner:str, _featureName:str, _accountLevel:number, _showMarkerNew:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		
		(var realmConstantsEntity:gfx = "$datahub.getSingleEntity(CC.realmConstants)")
		(var isInviteRefferalFriendUIAvailable:bool = "realmConstantsEntity.realmConstants.isInviteRefferalFriendUIAvailable")

		(var referralCollection:gfx = "$datahub.getCollection(CC.referral)")
		(var isRefSysParticipant:bool = "referralCollection.items.length")

		(var isActive:bool = "	isInviteRefferalFriendUIAvailable &&
								(_accountLevel >= SC.Ui_common.AL_MENU_FEATURES_VISIBILITY.REFERRAL ||
								isRefSysParticipant)")

		
		(var resourceEntity:gfx = "$datahub.getSingleEntity(CC.accountResource)")
		(var hasReferralPoints:bool = "resourceEntity ? resourceEntity.accountResource.hasReferralPoints : false" (event "resourceEntity.accountResource.evChangedHasReferralPoints"))
	)
	(bindcall externalCall 'direct.action' "['ServerUIDataUSS.setUserTaskExecuted', {taskId: SC.Common.USER_TASKS_FLAGS.CONTROL_SEEN_PLAYTOGETHER}]" init=false watch=false  on='click')
	(bindcall externalCall "'inputMapping.onAction'" "[isActive ? 'navigateTo' : '',	{route: SC.Ui_windows.ROUTE.PORTAL,
																						 data: {url: SC.Ui_windows.GUI_URL.PLAYTOGETHER_IN_GAME}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.RECRUITMENT]]" init=false watch=false on=click)

	(class $FullsizeAbsolute)

	(controller $Instance renderer='Hub2DNewsBannerContent'
		(args
			_featureName = "SC.Hub_2d.BANNER_TYPE.VALUE_TO_NAME[_featureName]"
			_title = 'IDS_CHAT_GROUP_REFERRALS'
			_isActive="isActive"
			_isReward="hasReferralPoints"
			_unifiedStatus="isActive && hasReferralPoints ? SC.Ui_styles.UNIFIED_STATUS.BROTHERHOOD_REWARD : ''"
		)
	)

	(controller $Tooltip
		(bind renderer "'RecruitmentBannerTooltip'") 
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element Hub2DAllNewsBanner() layout=true
	(scope
		(macro MOUSE_HANDLER_SCOPE)
		(macro GET_UNREAD_NEW_COUNTER_AND_GIFT_STATUS_SCOPE) 

		(var url:str = "	isRewardAvailable		? SC.Ui_windows.GUI_URL.NEWS_VERSION_IN_GAME :
							isUnreadRecomendedNews	? SC.Ui_windows.GUI_URL.NEWS_IN_GAME
													: SC.Ui_windows.GUI_URL.NEWS_ALL_IN_GAME ")
	)
	(bindcall externalCall 'direct.action' "['ServerUIDataUSS.setUserTaskExecuted', {taskId: SC.Common.USER_TASKS_FLAGS.KNOWS_ABOUT_NEWS}]" init=false watch=false  on='click')
	(bindcall externalCall "'inputMapping.onAction'" "['navigateTo',	{route: SC.Ui_windows.ROUTE.PORTAL,
																		 data: {url: url}}]" init=false watch=false  on='click')
	(bindcall externalCall 'direct.action' "[SC.Common.STATISTICS_EVENTS.LOG, [HUB2D_BANNER_STATISTICS.ALL_NEWS]]" init=false watch=false on=click)

	(block
		(style
			(paddingTop="M")
			(paddingLeft="SXS")
			(bind height "HUB2D_ALL_NEWS_HEIGHT")
			(bind width "HUB2D_ALL_NEWS_WIDTH")
			(bind backgroundColor "rollOver	? HUB2D_BACKGROUNDCOLOR_ROLLOVER
											: HUB2D_BACKGROUNDCOLOR_ACTIVE")
		)

		
		(block
			(element Hub2DBannerItemTitle
				_class = '$TextDefaultBold21NM'
				_title = 'IDS_NEWS'
				_unifiedStatus = "isRewardAvailable ? SC.Ui_styles.UNIFIED_STATUS.REWARD_AVAILABLE : ''"
			)
		)

		
		(block
			(bind visible "isRewardAvailable")
			(style
				(width = 19px) (height = 19px) (position = "absolute") (right = "S") (bottom = "SXS")
				(bind backgroundImage "'url:../service_kit/unified_status_icons/icon_reward_available.png'")
			)
		)

		
		(block
			(bind visible "isUnreadRecomendedNews && !isRewardAvailable")
			(style
				(position = "absolute") (right = "SXS")
			)
			(tf
				(class $TextDefaultBold21NM)
				(style
					(alpha = "TA")
				)
				(bind text "unreadRecomendedNewsCount")
			)
		)
	)

	(block
		(class $FullsizeAbsolute)

		(style
			(bind alpha "rollOver	? 0.3
									: 0.2")
			(backgroundImage = "'url:../service_kit/frames/one_pixel_frame.png'")
			(scale9grid=2)
			(hitTest=false)
		)
	)

	(controller $Tooltip
		(bind renderer "'IngameNewsTooltip'")
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)

	(macro MOUSE_HANDLER
		_soundSet = "'button_2D_Hub_Banner_News'"
	)
)